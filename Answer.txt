
Вопросы: Как бы вы тестировали/проверяли корректность, полноту и неизбыточность ваших тестов? 
         Как бы вы осуществляли эти проверки в автоматическом режиме?


• Для составления тестов (для проверки корректности и полноты покрытия), в случае конкретной функции,
  старался бы придерживаться следующих подходов:
    1. составления тестов для максимально критичных (+ максимально вероятных) веток (бранчей) кода
    2. нужны проверки всех граничных значений
    3. нужны проверки всех 'магических' значений/констант 
       (в данном случае, к примеру есть условие 'Минимальная сумма доставки — 400 рублей')
    4. проверки по различным классам эквивалентности
    5. нужны негативные тесты 
       (в данном случа есть возможные ситуация и комбинации условий, что должны приводить к исключениям - нужно их учесть при тестировании)
 
    Для поддержки не избыточности тестового набора применял бы (в данном случае):
    1. pairwaise testing подход
    2. не функциональные тесты - не требуются

    Какие бы метрики анализировал бы:
    1. Code coverage   - не нужно 
       (очень спорная метрика imho.. мало что говорит на практике: 
        одна строка кода может по критичности и воздействию на функционал отличаться от другой строки кода многократно)

    2. Branch coverage - обязательно. 
       (особенно в данном случае, наша функция представляет собой по факту набор if-else ветвей. Данная метрика была бы очень актуальна в данном случае)
 

• Как бы вы осуществляли эти проверки в автоматическом режиме?
    Ну очевидно, что это должны быть авто тесты изначально,
    причём (исходя из условий - что достаточно статичны и не зависят от внешних источников) -> это будут unit тесты.
 
    Запускаться будут на каждый коммит в какой-то CI инфраструктуре (Jenkins (самое вероятное), TeamCity, BuildBot .. ну может GitLab CI).
    Можно настроить CI на запуск данных юнит тестов только в случае изменения исходников данного модуля - но думаю не нужно в данном случае.